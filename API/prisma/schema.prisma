// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id      Int      @id @default(autoincrement())
  name    String @db.VarChar(100) 
  email   String @unique @db.VarChar(100)  
  password String @db.VarChar(100)  
  sector  String @db.VarChar(100) 
  position String @db.VarChar(100) 
  level Int @default(1)
  active Int @default(1)

  @@check(email ~* "^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$")
}


model Employee {
  id      Int      @id @default(autoincrement())
  name    String @db.VarChar(100) 
  cpf     String @unique @db.VarChar(11)  
  email   String @unique @db.VarChar(100)   
  sector  String @db.VarChar(100) 
  position String @db.VarChar(100) 
  numPend  Int     @default(0)
  cadUserID Int 
  cadUserName String @db.VarChar(100) 
  modality String @db.VarChar(5)
  active Int @default(1)
  pendencies Pendency[]
}

model Pendency {
  id      Int      @id @default(autoincrement())
  emplID    Int 
  emplName   String @db.VarChar(100)    
  userId  Int
  userName String @db.VarChar(100) 
  date DateTime
  devolUserId  Int @default(0)
  devolUserName String @db.VarChar(100) 
  devolDate DateTime? 
  devolType Int @default(1)
  status Int @default(1)
  kitSize String @db.VarChar(5)
   employee     Employee @relation(fields: [emplID], references: [id])
}